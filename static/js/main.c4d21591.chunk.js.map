{"version":3,"sources":["index.js"],"names":["Square","props","win","winner","includes","id","className","onClick","value","Board","row","map","sq","renderSquare","i","this","squares","renderRow","React","Component","Game","state","history","index","Array","fill","stepN","xIsNext","sortDesc","slice","current","length","calculateWinner","setState","concat","step","move","reduce","tot","val","ind","res","sort","a","b","status","mark","moves","jumpTo","displayBoardShot","pos","handleClick","sortHistory","String","fromCharCode","lines","c","push","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c4d21591.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n// const log = console.log;\r\n\r\n// SQUARE component\r\nfunction Square(props) {\r\n  let win = '';\r\n  if (props.winner && props.winner.includes(props.id))\r\n    win = 'win';\r\n  return (\r\n    <button\r\n      className={ `square ${win}` }\r\n      onClick={ props.onClick }\r\n    >\r\n      {props.value}\r\n    </button>\r\n  )\r\n}\r\n\r\n// BOARD component\r\nclass Board extends React.Component {\r\n  renderRow(row) {\r\n    return (\r\n      <div className=\"board-row\" key={`row-${row}`}>\r\n        { [0,1,2].map((sq) => this.renderSquare(row*3 + sq)) }\r\n    </div>\r\n    )\r\n  }\r\n  renderSquare(i) {\r\n    return (\r\n      <Square\r\n        key = {i}\r\n        id = {i}\r\n        winner = {this.props.winner}\r\n        value={this.props.squares[i]}\r\n        onClick={() => this.props.onClick(i)}\r\n      />\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        { [0,1,2].map((row) => this.renderRow(row)) }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// GAME component\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [{\r\n        index: 0,\r\n        squares: Array(9).fill(null)\r\n      }],\r\n      stepN: 0,\r\n      xIsNext: true,\r\n      sortDesc: true,\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepN + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    const index = current.index;\r\n    const winner = calculateWinner(squares);\r\n\r\n    if (winner || squares[i])\r\n      return;\r\n    squares[i] = (this.state.xIsNext) ? 'X' : 'O';\r\n    this.setState({\r\n      history: history.concat([{\r\n        squares: squares,\r\n        index: index + 1,\r\n      }]),\r\n      stepN: history.length,\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepN: step,\r\n      xIsNext: (step % 2) === 0,\r\n    })\r\n  }\r\n\r\n  sortHistory() {\r\n    this.setState({\r\n      sortDesc: !this.state.sortDesc,\r\n    })\r\n  }\r\n\r\n  displayBoardShot(move) {\r\n    return this.state.history[move].squares.reduce((tot, val, ind) => {\r\n      let res = (val) ? tot + val : tot + ' ';\r\n      res += ((ind+1) % 3 === 0 && ind < 8) ? '\\n' : ''; \r\n      return res;\r\n    }, '');\r\n  }\r\n\r\n  render() {\r\n    let history = [...this.state.history];\r\n    const current = history[this.state.stepN];\r\n    const winner = calculateWinner(current.squares);\r\n    if (!this.state.sortDesc) \r\n      history.sort((a,b) => (a.index - b.index) ? -1 : 1);\r\n    let status = (winner)\r\n      ? `Winner ${winner.mark}`\r\n      : (current.index >= 9) \r\n        ? `It's a draw`\r\n        :`Next player: ${(this.state.xIsNext) ? 'X' : 'O'}`;\r\n\r\n    const moves = history.map((step, move) => {\r\n      return (\r\n        <div \r\n          className='step'\r\n          key={move}\r\n        >\r\n          <button\r\n            className={ (step.index === this.state.stepN) ? 'bold' : '' }\r\n            onClick={ () => this.jumpTo(step.index) }\r\n          >\r\n            { (!step.index) ? `${move}. Go to game start` : `${move}.  Go to move #${step.index}` }\r\n          </button>\r\n          <div className='shot-board'>\r\n            { this.displayBoardShot(step.index) }\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n                  \r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            winner={ (winner) ? winner.pos : null}\r\n            squares={current.squares}\r\n            onClick={(i) => this.handleClick(i)} \r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div className=\"status\">\r\n            {status}\r\n          </div>\r\n          <div>Sort:&nbsp;\r\n            <button onClick = { () => this.sortHistory() }>\r\n              {(!this.state.sortDesc) ? String.fromCharCode(8679) : String.fromCharCode(8681)}\r\n            </button>\r\n          </div>\r\n          <div>{moves}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n\r\nfunction calculateWinner(squares) {\r\n  let res = null;\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      if (!res) {\r\n        res = {mark: squares[a], pos: lines[i]};\r\n      } else {\r\n        res.pos.push(...lines[i]);\r\n      }\r\n    }\r\n  }\r\n  return res;\r\n};"],"sourceRoot":""}