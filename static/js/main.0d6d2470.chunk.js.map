{"version":3,"sources":["modules/calcWinner.js","components/Square.js","components/Board.js","components/Game.js","index.js","styles/Square.module.css","styles/Board.module.css"],"names":["calculateWinner","squares","res","lines","i","length","a","b","c","pos","push","mark","Square","props","squareClass","styles","square","winner","includes","id","win","className","onClick","value","Board","renderRow","row","board_row","map","sq","Game","useState","index","Array","fill","history","setHistory","stepN","setStepN","xIsNext","setXIsNext","sortDesc","setSortDesc","displayBoardShot","move","reduce","tot","val","ind","historyOld","current","sort","status","moves","step","jumpTo","slice","handleClick","String","fromCharCode","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.0d6d2470.chunk.js","sourcesContent":["function calculateWinner(squares) {\r\n    let res = null;\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        if (!res) {\r\n          res = {mark: squares[a], pos: lines[i]};\r\n        } else {\r\n          res.pos.push(...lines[i]);\r\n        }\r\n      }\r\n    }\r\n    return res;\r\n  };\r\n\r\n  export default calculateWinner;","import styles from '../styles/Square.module.css'\r\n\r\n// SQUARE component\r\nfunction Square(props) {\r\n  let squareClass = styles.square;\r\n  // if we need to mark winning squares\r\n    if (props.winner && props.winner.includes(props.id)) \r\n      squareClass += ` ${styles.win}`; \r\n    return (\r\n      <button\r\n        className = { squareClass }\r\n        onClick = { props.onClick }\r\n      >\r\n        { props.value }\r\n      </button>\r\n    )\r\n  };\r\n\r\n  export default Square;","import Square from \"./Square\";\r\nimport styles from '../styles/Board.module.css'\r\n\r\n// BOARD component\r\nfunction Board(props) {\r\n\r\n    function renderRow(row) {\r\n      return (\r\n        <div \r\n          className = { `${styles.board_row}` } \r\n          key = { `row-${row}` }\r\n        >\r\n          { [0,1,2].map((sq) => renderSquare(row*3 + sq)) }\r\n        </div>\r\n      )\r\n    };\r\n\r\n    function renderSquare(i) {\r\n      return (\r\n        <Square\r\n          key = { i }\r\n          id = { i }\r\n          winner = { props.winner }\r\n          value = { props.squares[i] }\r\n          onClick = { () => props.onClick(i) }\r\n        />\r\n      )\r\n    };\r\n    \r\n    return (\r\n      <div>\r\n        { [0,1,2].map((row) => renderRow(row)) }\r\n      </div>\r\n    );  \r\n}\r\n\r\nexport default Board;","import React, { useState } from 'react';\r\nimport calculateWinner from '../modules/calcWinner';\r\nimport Board from './Board';\r\nimport '../styles/Game.css';\r\n\r\n// GAME component\r\n\r\nfunction Game() {\r\n  const [history, setHistory] = useState([{\r\n    index: 0,\r\n    squares: Array(9).fill(null)\r\n  }]);\r\n  const [stepN, setStepN] = useState(0);\r\n  const [xIsNext, setXIsNext] = useState(true);\r\n  const [sortDesc, setSortDesc] = useState(true);\r\n\r\n  function handleClick(i) {\r\n    const historyOld = history.slice(0, stepN + 1);\r\n    const current = historyOld[historyOld.length - 1];\r\n    const squares = current.squares.slice();\r\n    const index = current.index; \r\n    const winner = calculateWinner(squares);\r\n\r\n    if (winner || squares[i])\r\n      return;\r\n    squares[i] = (xIsNext) ? 'X' : 'O';\r\n    setHistory([...historyOld, {\r\n      squares: squares,\r\n      index: index + 1,\r\n    }]);\r\n    setStepN(historyOld.length);\r\n    setXIsNext(!xIsNext);\r\n  }\r\n\r\n  function jumpTo(step) {\r\n    setStepN(step);\r\n    setXIsNext((step % 2) === 0);\r\n  }\r\n\r\n  function sortHistory() {\r\n    setSortDesc(!sortDesc);\r\n  }\r\n\r\n  function displayBoardShot(move) {\r\n    return history[move].squares\r\n      .reduce((tot, val, ind) => {\r\n        let res = (val) ? tot + val : tot + ' ';\r\n        res += ((ind+1) % 3 === 0 && ind < 8) ? '\\n' : ''; \r\n        return res;\r\n      }, '');\r\n  }\r\n\r\n  let historyOld = [...history];\r\n  const current = historyOld[stepN];\r\n  const winner = calculateWinner(current.squares);\r\n  if (!sortDesc) \r\n    historyOld.sort((a,b) => (a.index - b.index) ? -1 : 1);\r\n  let status = (winner)\r\n    ? `Winner ${winner.mark}`\r\n    : (current.index >= 9) \r\n      ? `It's a draw`\r\n      : `Next player: ${(xIsNext) ? 'X' : 'O'}`;\r\n\r\n  const moves = historyOld.map((step, move) => {\r\n    return (\r\n      <div \r\n        className = 'step'\r\n        key = { move }\r\n      >\r\n        <button\r\n          className = { (step.index === stepN) ? 'bold' : '' }\r\n          onClick = { () => jumpTo(step.index) }\r\n        >\r\n          { (!step.index) ? `${move}. Go to game start` : `${move}.  Go to move #${step.index}` }\r\n        </button>\r\n        <div className='shot-board'>\r\n          { displayBoardShot(step.index) }\r\n        </div>\r\n      </div>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <div className=\"game-board\">\r\n        <Board\r\n          winner = { (winner) ? winner.pos : null}\r\n          squares = { current.squares }\r\n          onClick = { (i) => handleClick(i) } \r\n        />\r\n      </div>\r\n      <div className=\"game-info\">\r\n        <div>OXO-Game v.12.10.1</div>\r\n        <div className=\"status\">\r\n          {status}\r\n        </div>\r\n        <div>Sort:&nbsp;\r\n          <button onClick = { () => sortHistory() }>\r\n            { (!sortDesc) ? String.fromCharCode(8679) : String.fromCharCode(8681)}\r\n          </button>\r\n        </div>\r\n        <div>{ moves }</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Game from './components/Game';\r\n// import './index.css';\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"square\":\"Square_square__3Dc7g\",\"win\":\"Square_win__3JFZX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board_row\":\"Board_board_row__3zRSy\"};"],"sourceRoot":""}