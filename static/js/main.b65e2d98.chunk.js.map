{"version":3,"sources":["index.js"],"names":["log","console","Square","props","win","winner","includes","id","className","onClick","value","Board","renderRow","row","map","sq","i","squares","Game","useState","index","Array","fill","history","setHistory","stepN","setStepN","xIsNext","setXIsNext","sortDesc","setSortDesc","displayBoardShot","move","reduce","tot","val","ind","res","historyOld","current","calculateWinner","sort","a","b","status","mark","moves","step","jumpTo","pos","slice","length","handleClick","String","fromCharCode","lines","c","push","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b65e2d98.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nconst log = console.log;\r\n\r\n// SQUARE component\r\nfunction Square(props) {\r\n  // if we need to mark winning squares\r\n  let win = (props.winner && props.winner.includes(props.id)) \r\n    ? 'win' \r\n    : '';\r\n  return (\r\n    <button\r\n      className = { `square ${win}` }\r\n      onClick = { props.onClick }\r\n    >\r\n      { props.value }\r\n    </button>\r\n  )\r\n};\r\n\r\n// BOARD component\r\nfunction Board(props) {\r\n  function renderRow(row) {\r\n    return (\r\n      <div \r\n        className = \"board-row\" \r\n        key = { `row-${row}` }\r\n      >\r\n        { [0,1,2].map((sq) => renderSquare(row*3 + sq)) }\r\n      </div>\r\n    )\r\n  };\r\n  function renderSquare(i) {\r\n    return (\r\n      <Square\r\n        key = { i }\r\n        id = { i }\r\n        winner = { props.winner }\r\n        value = { props.squares[i] }\r\n        onClick = { () => props.onClick(i) }\r\n      />\r\n    )\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      { [0,1,2].map((row) => renderRow(row)) }\r\n    </div>\r\n  );  \r\n}\r\n\r\n// GAME component\r\n\r\nfunction Game() {\r\n  const [history, setHistory] = useState([{\r\n    index: 0,\r\n    squares: Array(9).fill(null)\r\n  }]);\r\n  const [stepN, setStepN] = useState(0);\r\n  const [xIsNext, setXIsNext] = useState(true);\r\n  const [sortDesc, setSortDesc] = useState(true);\r\n\r\n  function handleClick(i) {\r\n    const historyOld = history.slice(0, stepN + 1);\r\n    const current = historyOld[historyOld.length - 1];\r\n    const squares = current.squares.slice();\r\n    const index = current.index; \r\n    const winner = calculateWinner(squares);\r\n\r\n    if (winner || squares[i])\r\n      return;\r\n    squares[i] = (xIsNext) ? 'X' : 'O';\r\n    setHistory([...historyOld, {\r\n      squares: squares,\r\n      index: index + 1,\r\n    }]);\r\n    setStepN(historyOld.length);\r\n    setXIsNext(!xIsNext);\r\n  }\r\n\r\n  function jumpTo(step) {\r\n    log(step, stepN)\r\n    setStepN(step);\r\n    setXIsNext((step % 2) === 0);\r\n  }\r\n\r\n  function sortHistory() {\r\n    setSortDesc(!sortDesc);\r\n  }\r\n\r\n  function displayBoardShot(move) {\r\n    return history[move].squares\r\n      .reduce((tot, val, ind) => {\r\n        let res = (val) ? tot + val : tot + ' ';\r\n        res += ((ind+1) % 3 === 0 && ind < 8) ? '\\n' : ''; \r\n        return res;\r\n      }, '');\r\n  }\r\n\r\n  let historyOld = [...history];\r\n  const current = historyOld[stepN];\r\n  const winner = calculateWinner(current.squares);\r\n  if (!sortDesc) \r\n    historyOld.sort((a,b) => (a.index - b.index) ? -1 : 1);\r\n  let status = (winner)\r\n    ? `Winner ${winner.mark}`\r\n    : (current.index >= 9) \r\n      ? `It's a draw`\r\n      : `Next player: ${(xIsNext) ? 'X' : 'O'}`;\r\n\r\n  const moves = historyOld.map((step, move) => {\r\n    return (\r\n      <div \r\n        className = 'step'\r\n        key = { move }\r\n      >\r\n        <button\r\n          className = { (step.index === stepN) ? 'bold' : '' }\r\n          onClick = { () => jumpTo(step.index) }\r\n        >\r\n          { (!step.index) ? `${move}. Go to game start` : `${move}.  Go to move #${step.index}` }\r\n        </button>\r\n        <div className='shot-board'>\r\n          { displayBoardShot(step.index) }\r\n        </div>\r\n      </div>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <div className=\"game-board\">\r\n        <Board\r\n          winner = { (winner) ? winner.pos : null}\r\n          squares = { current.squares }\r\n          onClick = { (i) => handleClick(i) } \r\n        />\r\n      </div>\r\n      <div className=\"game-info\">\r\n        <div>OXO-Game v.12.7.3</div>\r\n        <div className=\"status\">\r\n          {status}\r\n        </div>\r\n        <div>Sort:&nbsp;\r\n          <button onClick = { () => sortHistory() }>\r\n            { (!sortDesc) ? String.fromCharCode(8679) : String.fromCharCode(8681)}\r\n          </button>\r\n        </div>\r\n        <div>{ moves }</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n\r\nfunction calculateWinner(squares) {\r\n  let res = null;\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      if (!res) {\r\n        res = {mark: squares[a], pos: lines[i]};\r\n      } else {\r\n        res.pos.push(...lines[i]);\r\n      }\r\n    }\r\n  }\r\n  return res;\r\n};"],"sourceRoot":""}