{"version":3,"sources":["index.js"],"names":["Square","props","win","winner","includes","id","className","onClick","value","Board","row","map","sq","renderSquare","i","this","squares","renderRow","React","Component","Game","state","history","index","Array","fill","stepN","xIsNext","sortDesc","slice","current","length","calculateWinner","setState","concat","step","move","res","location","reduce","tot","val","ind","sort","a","b","moves","jumpTo","displayLocation","status","mark","pos","handleClick","sortHistory","lines","c","push","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dd8cb45c.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n// const log = console.log;\r\n\r\n// SQUARE component\r\nfunction Square(props) {\r\n  let win = '';\r\n  if (props.winner && props.winner.includes(props.id))\r\n    win = 'win';\r\n  return (\r\n    <button\r\n      className={ `square ${win}` }\r\n      onClick={ props.onClick }\r\n    >\r\n      {props.value}\r\n    </button>\r\n  )\r\n}\r\n\r\n// BOARD component\r\nclass Board extends React.Component {\r\n  renderRow(row) {\r\n    return (\r\n      <div className=\"board-row\" key={`row-${row}`}>\r\n        { [0,1,2].map((sq) => this.renderSquare(row*3 + sq)) }\r\n    </div>\r\n    )\r\n  }\r\n  renderSquare(i) {\r\n    return (\r\n      <Square\r\n        key = {i}\r\n        id = {i}\r\n        winner = {this.props.winner}\r\n        value={this.props.squares[i]}\r\n        onClick={() => this.props.onClick(i)}\r\n      />\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        { [0,1,2].map((row) => this.renderRow(row)) }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// GAME component\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [{\r\n        index: 0,\r\n        squares: Array(9).fill(null)\r\n      }],\r\n      stepN: 0,\r\n      xIsNext: true,\r\n      sortDesc: true,\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepN + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    const index = current.index;\r\n    const winner = calculateWinner(squares);\r\n\r\n    if (winner || squares[i])\r\n      return;\r\n    squares[i] = (this.state.xIsNext) ? 'X' : 'O';\r\n    this.setState({\r\n      history: history.concat([{\r\n        squares: squares,\r\n        index: index + 1,\r\n      }]),\r\n      stepN: history.length,\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepN: step,\r\n      xIsNext: (step % 2) === 0,\r\n    })\r\n  }\r\n\r\n  sortHistory() {\r\n    this.setState({\r\n      sortDesc: !this.state.sortDesc,\r\n    })\r\n  }\r\n\r\n  displayLocation(move) {\r\n    let res;\r\n    if (!move)\r\n      res = 'Go to game start';\r\n    else {\r\n      const location = this.state.history[move].squares.reduce((tot, val, ind) => {\r\n        let res = (val) ? tot + val : tot + '_';\r\n        res += ((ind+1) % 3 === 0 && ind < 8) ? ',' : ''; \r\n        return res;\r\n      }, '');\r\n      res = `Go to move #${move} ` + location;\r\n    }\r\n    return res;\r\n  }\r\n\r\n  render() {\r\n    let history = [...this.state.history];\r\n    const current = history[this.state.stepN];\r\n    const winner = calculateWinner(current.squares);\r\n    if (!this.state.sortDesc) \r\n      history.sort((a,b) => (a.index - b.index) ? -1 : 1);\r\n    const moves = history.map((step, move) => {\r\n      return (\r\n        <li \r\n          key={move}\r\n        >\r\n          <button\r\n            className={(step.index === this.state.stepN) ? 'bold' : ''}\r\n            onClick={() => {\r\n              this.jumpTo(step.index);\r\n            }}\r\n          >\r\n            {this.displayLocation(step.index)}\r\n          </button>\r\n        </li>\r\n      )\r\n    })\r\n\r\n    let status = (winner)\r\n                ? `Winner ${winner.mark}`\r\n                : (current.index >= 9) \r\n                  ? `It's a draw`\r\n                  :`Next player: ${(this.state.xIsNext) ? 'X' : 'O'}`;\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            winner={ (winner) ? winner.pos : null}\r\n            squares={current.squares}\r\n            onClick={(i) => this.handleClick(i)} \r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <button\r\n            onClick = { () => this.sortHistory() }\r\n          >\r\n            {(this.state.sortDesc) ? 'Sort -Up-' : 'Sort Down'}\r\n          </button>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n\r\nfunction calculateWinner(squares) {\r\n  let res = null;\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      if (!res) {\r\n        res = {mark: squares[a], pos: lines[i]};\r\n      } else {\r\n        res.pos.push(...lines[i]);\r\n      }\r\n    }\r\n  }\r\n  return res;\r\n};"],"sourceRoot":""}